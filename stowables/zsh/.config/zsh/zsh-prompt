#----------#
#-autoload-#
#----------#

# vcs_info
autoload -Uz vcs_info

# colours
autoload -Uz colors && colors
export CLICOLOR=1
export LSCOLORS=gxBxhxDxfxhxhxhxhxcxcx

#-----#
#-git-#
#-----#

# enable git
zstyle ":vcs_info:*" enable git

# setup hook that runs before every prompt
precmd() { vcs_info }

# format git prompt
zstyle ':vcs_info:git*' formats "%F{008}(%b)%f "

#--------#
#-design-#
#--------#

_prompt() {
    if (($_prompt_compact)); then
        echo "%F{008}~>%f "
        return
    fi
    VIM_MODE="${${KEYMAP/vicmd/NRM}/(main|viins)/INS}"
    echo "
${vcs_info_msg_0_}%5~
${VIM_MODE} %F{003}~>%f "
    return
}

_zle-line-init() {
    # reset prompt for VIM_MODE to work
    zle .reset-prompt

    [[ $CONTEXT == start ]] || return 0

    # Start regular line editor
    (( $+zle_bracketed_paste )) && print -r -n - $zle_bracketed_paste[1]
    zle .recursive-edit
    local -i ret=$?
    (( $+zle_bracketed_paste )) && print -r -n - $zle_bracketed_paste[2]

    # If we received EOT, we exit the shell
    if [[ $ret == 0 && $KEYS == $'\4' ]]; then
        _prompt_compact=1
        zle .reset-prompt
        exit
    fi

    # Line edition is over. Shorten the current prompt.
    _prompt_compact=1
    zle .reset-prompt
    unset _prompt_compact

    if (( ret )); then
        # Ctrl-C
        zle .send-break
    else
        # Enter
        zle .accept-line
    fi
    return ret
}

_zle-keymap-select() {
    zle .reset-prompt
}

setopt PROMPT_SUBST
zle -N zle-line-init _zle-line-init
zle -N zle-keymap-select _zle-keymap-select
PS1='$(_prompt)'
